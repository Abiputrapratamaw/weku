const fetch = require('node-fetch');

// Fungsi country langsung di dalam file
const mooCountry = (value) => {
  const regionMap = {
    AF: 'Afghanistan ðŸ‡¦ðŸ‡«',
    AL: 'Albania ðŸ‡¦ðŸ‡±',
    DZ: 'Algeria ðŸ‡©ðŸ‡¿',
    AS: 'American Samoa ðŸ‡¦ðŸ‡¸',
    AD: 'Andorra ðŸ‡¦ðŸ‡©',
    AO: 'Angola ðŸ‡¦ðŸ‡´',
    AI: 'Anguilla ðŸ‡¦ðŸ‡®',
    AQ: 'Antarctica ðŸ‡¦ðŸ‡¶',
    AG: 'Antigua and Barbuda ðŸ‡¦ðŸ‡¬',
    AR: 'Argentina ðŸ‡¦ðŸ‡·',
    AM: 'Armenia ðŸ‡¦ðŸ‡²',
    AW: 'Aruba ðŸ‡¦ðŸ‡¼',
    AU: 'Australia ðŸ‡¦ðŸ‡º',
    AT: 'Austria ðŸ‡¦ðŸ‡¹',
    AZ: 'Azerbaijan ðŸ‡¦ðŸ‡¿',
    BH: 'Bahrain ðŸ‡§ðŸ‡­',
    BD: 'Bangladesh ðŸ‡§ðŸ‡©',
    BY: 'Belarus ðŸ‡§ðŸ‡¾',
    BE: 'Belgium ðŸ‡§ðŸ‡ª',
    BZ: 'Belize ðŸ‡§ðŸ‡¿',
    BJ: 'Benin ðŸ‡§ðŸ‡¯',
    BM: 'Bermuda ðŸ‡§ðŸ‡²',
    BT: 'Bhutan ðŸ‡§ðŸ‡¹',
    BO: 'Bolivia ðŸ‡§ðŸ‡´',
    BA: 'Bosnia and Herzegovina ðŸ‡§ðŸ‡¦',
    BW: 'Botswana ðŸ‡§ðŸ‡¼',
    BR: 'Brazil ðŸ‡§ðŸ‡·',
    BN: 'Brunei ðŸ‡§ðŸ‡³',
    BG: 'Bulgaria ðŸ‡§ðŸ‡¬',
    BF: 'Burkina Faso ðŸ‡§ðŸ‡«',
    BI: 'Burundi ðŸ‡§ðŸ‡®',
    KH: 'Cambodia ðŸ‡°ðŸ‡­',
    CM: 'Cameroon ðŸ‡¨ðŸ‡²',
    CA: 'Canada ðŸ‡¨ðŸ‡¦',
    CV: 'Cape Verde ðŸ‡¨ðŸ‡»',
    CF: 'Central African Republic ðŸ‡¨ðŸ‡«',
    TD: 'Chad ðŸ‡¹ðŸ‡©',
    CL: 'Chile ðŸ‡¨ðŸ‡±',
    CN: 'China ðŸ‡¨ðŸ‡³',
    CO: 'Colombia ðŸ‡¨ðŸ‡´',
    KM: 'Comoros ðŸ‡°ðŸ‡²',
    CD: 'Congo ðŸ‡¨ðŸ‡©',
    CG: 'Congo Republic ðŸ‡¨ðŸ‡¬',
    CR: 'Costa Rica ðŸ‡¨ðŸ‡·',
    HR: 'Croatia ðŸ‡­ðŸ‡·',
    CU: 'Cuba ðŸ‡¨ðŸ‡º',
    CY: 'Cyprus ðŸ‡¨ðŸ‡¾',
    CZ: 'Czech Republic ðŸ‡¨ðŸ‡¿',
    DK: 'Denmark ðŸ‡©ðŸ‡°',
    DJ: 'Djibouti ðŸ‡©ðŸ‡¯',
    DM: 'Dominica ðŸ‡©ðŸ‡²',
    DO: 'Dominican Republic ðŸ‡©ðŸ‡´',
    EC: 'Ecuador ðŸ‡ªðŸ‡¨',
    EG: 'Egypt ðŸ‡ªðŸ‡¬',
    SV: 'El Salvador ðŸ‡¸ðŸ‡»',
    GQ: 'Equatorial Guinea ðŸ‡¬ðŸ‡¶',
    ER: 'Eritrea ðŸ‡ªðŸ‡·',
    EE: 'Estonia ðŸ‡ªðŸ‡ª',
    ET: 'Ethiopia ðŸ‡ªðŸ‡¹',
    FJ: 'Fiji ðŸ‡«ðŸ‡¯',
    FI: 'Finland ðŸ‡«ðŸ‡®',
    FR: 'France ðŸ‡«ðŸ‡·',
    GA: 'Gabon ðŸ‡¬ðŸ‡¦',
    GM: 'Gambia ðŸ‡¬ðŸ‡²',
    GE: 'Georgia ðŸ‡¬ðŸ‡ª',
    DE: 'Germany ðŸ‡©ðŸ‡ª',
    GH: 'Ghana ðŸ‡¬ðŸ‡­',
    GR: 'Greece ðŸ‡¬ðŸ‡·',
    GD: 'Grenada ðŸ‡¬ðŸ‡©',
    GT: 'Guatemala ðŸ‡¬ðŸ‡¹',
    GN: 'Guinea ðŸ‡¬ðŸ‡³',
    GW: 'Guinea-Bissau ðŸ‡¬ðŸ‡¼',
    GY: 'Guyana ðŸ‡¬ðŸ‡¾',
    HT: 'Haiti ðŸ‡­ðŸ‡¹',
    HN: 'Honduras ðŸ‡­ðŸ‡³',
    HK: 'Hong Kong ðŸ‡­ðŸ‡°',
    HU: 'Hungary ðŸ‡­ðŸ‡º',
    IS: 'Iceland ðŸ‡®ðŸ‡¸',
    IN: 'India ðŸ‡®ðŸ‡³',
    ID: 'Indonesia ðŸ‡®ðŸ‡©',
    IR: 'Iran ðŸ‡®ðŸ‡·',
    IQ: 'Iraq ðŸ‡®ðŸ‡¶',
    IE: 'Ireland ðŸ‡®ðŸ‡ª',
    IL: 'Israel ðŸ‡®ðŸ‡±',
    IT: 'Italy ðŸ‡®ðŸ‡¹',
    JM: 'Jamaica ðŸ‡¯ðŸ‡²',
    JP: 'Japan ðŸ‡¯ðŸ‡µ',
    JO: 'Jordan ðŸ‡¯ðŸ‡´',
    KZ: 'Kazakhstan ðŸ‡°ðŸ‡¿',
    KE: 'Kenya ðŸ‡°ðŸ‡ª',
    KI: 'Kiribati ðŸ‡°ðŸ‡®',
    KP: 'North Korea ðŸ‡°ðŸ‡µ',
    KR: 'South Korea ðŸ‡°ðŸ‡·',
    KW: 'Kuwait ðŸ‡°ðŸ‡¼',
    KG: 'Kyrgyzstan ðŸ‡°ðŸ‡¬',
    LA: 'Laos ðŸ‡±ðŸ‡¦',
    LV: 'Latvia ðŸ‡±ðŸ‡»',
    LB: 'Lebanon ðŸ‡±ðŸ‡§',
    LS: 'Lesotho ðŸ‡±ðŸ‡¸',
    LR: 'Liberia ðŸ‡±ðŸ‡·',
    LY: 'Libya ðŸ‡±ðŸ‡¾',
    LI: 'Liechtenstein ðŸ‡±ðŸ‡®',
    LT: 'Lithuania ðŸ‡±ðŸ‡¹',
    LU: 'Luxembourg ðŸ‡±ðŸ‡º',
    MO: 'Macau ðŸ‡²ðŸ‡´',
    MG: 'Madagascar ðŸ‡²ðŸ‡¬',
    MW: 'Malawi ðŸ‡²ðŸ‡¼',
    MY: 'Malaysia ðŸ‡²ðŸ‡¾',
    MV: 'Maldives ðŸ‡²ðŸ‡»',
    ML: 'Mali ðŸ‡²ðŸ‡±',
    MT: 'Malta ðŸ‡²ðŸ‡¹',
    MH: 'Marshall Islands ðŸ‡²ðŸ‡­',
    MR: 'Mauritania ðŸ‡²ðŸ‡·',
    MU: 'Mauritius ðŸ‡²ðŸ‡º',
    MX: 'Mexico ðŸ‡²ðŸ‡½',
    FM: 'Micronesia ðŸ‡«ðŸ‡²',
    MD: 'Moldova ðŸ‡²ðŸ‡©',
    MC: 'Monaco ðŸ‡²ðŸ‡¨',
    MN: 'Mongolia ðŸ‡²ðŸ‡³',
    ME: 'Montenegro ðŸ‡²ðŸ‡ª',
    MA: 'Morocco ðŸ‡²ðŸ‡¦',
    MZ: 'Mozambique ðŸ‡²ðŸ‡¿',
    MM: 'Myanmar ðŸ‡²ðŸ‡²',
    NA: 'Namibia ðŸ‡³ðŸ‡¦',
    NP: 'Nepal ðŸ‡³ðŸ‡µ',
    NL: 'Netherlands ðŸ‡³ðŸ‡±',
    NZ: 'New Zealand ðŸ‡³ðŸ‡¿',
    NI: 'Nicaragua ðŸ‡³ðŸ‡®',
    NE: 'Niger ðŸ‡³ðŸ‡ª',
    NG: 'Nigeria ðŸ‡³ðŸ‡³',
    MK: 'North Macedonia ðŸ‡²ðŸ‡°',
    NO: 'Norway ðŸ‡³ðŸ‡´',
    OM: 'Oman ðŸ‡´ðŸ‡²',
    PK: 'Pakistan ðŸ‡µðŸ‡°',
    PW: 'Palau ðŸ‡µðŸ‡¼',
    PS: 'Palestine ðŸ‡µðŸ‡¸',
    PA: 'Panama ðŸ‡µðŸ‡¦',
    PG: 'Papua New Guinea ðŸ‡µðŸ‡¬',
    PY: 'Paraguay ðŸ‡µðŸ‡¾',
    PE: 'Peru ðŸ‡µðŸ‡ª',
    PH: 'Philippines ðŸ‡µðŸ‡­',
    PL: 'Poland ðŸ‡µðŸ‡±',
    PT: 'Portugal ðŸ‡µðŸ‡¹',
    QA: 'Qatar ðŸ‡¶ðŸ‡¦',
    RO: 'Romania ðŸ‡·ðŸ‡´',
    RU: 'Russia ðŸ‡·ðŸ‡º',
    RW: 'Rwanda ðŸ‡·ðŸ‡¼',
    KN: 'Saint Kitts and Nevis ðŸ‡°ðŸ‡³',
    LC: 'Saint Lucia ðŸ‡±ðŸ‡¨',
    VC: 'Saint Vincent ðŸ‡»ðŸ‡¨',
    WS: 'Samoa ðŸ‡¼ðŸ‡¸',
    SM: 'San Marino ðŸ‡¸ðŸ‡²',
    ST: 'Sao Tome ðŸ‡¸ðŸ‡¹',
    SA: 'Saudi Arabia ðŸ‡¸ðŸ‡¦',
    SN: 'Senegal ðŸ‡¸ðŸ‡³',
    RS: 'Serbia ðŸ‡·ðŸ‡¸',
    SC: 'Seychelles ðŸ‡¸ðŸ‡¨',
    SL: 'Sierra Leone ðŸ‡¸ðŸ‡±',
    SG: 'Singapore ðŸ‡¸ðŸ‡¬',
    SK: 'Slovakia ðŸ‡¸ðŸ‡°',
    SI: 'Slovenia ðŸ‡¸ðŸ‡®',
    SB: 'Solomon Islands ðŸ‡¸ðŸ‡§',
    SO: 'Somalia ðŸ‡¸ðŸ‡´',
    ZA: 'South Africa ðŸ‡¿ðŸ‡¦',
    ES: 'Spain ðŸ‡ªðŸ‡¸',
    LK: 'Sri Lanka ðŸ‡±ðŸ‡°',
    SD: 'Sudan ðŸ‡¸ðŸ‡©',
    SR: 'Suriname ðŸ‡¸ðŸ‡·',
    SE: 'Sweden ðŸ‡¸ðŸ‡ª',
    CH: 'Switzerland ðŸ‡¨ðŸ‡­',
    SY: 'Syria ðŸ‡¸ðŸ‡¾',
    TW: 'Taiwan ðŸ‡¹ðŸ‡¼',
    TJ: 'Tajikistan ðŸ‡¹ðŸ‡¯',
    TZ: 'Tanzania ðŸ‡¹ðŸ‡¿',
    TH: 'Thailand ðŸ‡¹ðŸ‡­',
    TG: 'Togo ðŸ‡¹ðŸ‡¬',
    TO: 'Tonga ðŸ‡¹ðŸ‡´',
    TT: 'Trinidad and Tobago ðŸ‡¹ðŸ‡¹',
    TN: 'Tunisia ðŸ‡¹ðŸ‡³',
    TR: 'Turkey ðŸ‡¹ðŸ‡·',
    TM: 'Turkmenistan ðŸ‡¹ðŸ‡²',
    TV: 'Tuvalu ðŸ‡¹ðŸ‡»',
    UG: 'Uganda ðŸ‡ºðŸ‡¬',
    UA: 'Ukraine ðŸ‡ºðŸ‡¦',
    AE: 'United Arab Emirates ðŸ‡¦ðŸ‡ª',
    GB: 'United Kingdom ðŸ‡¬ðŸ‡§',
    US: 'United States ðŸ‡ºðŸ‡¸',
    UY: 'Uruguay ðŸ‡ºðŸ‡¾',
    UZ: 'Uzbekistan ðŸ‡ºðŸ‡¿',
    VU: 'Vanuatu ðŸ‡»ðŸ‡º',
    VE: 'Venezuela ðŸ‡»ðŸ‡ª',
    VN: 'Vietnam ðŸ‡»ðŸ‡³',
    YE: 'Yemen ðŸ‡¾ðŸ‡ª',
    ZM: 'Zambia ðŸ‡¿ðŸ‡²',
    ZW: 'Zimbabwe ðŸ‡¿ðŸ‡¼'
  };

  return regionMap[value] || 'Tidak diketahui';
};

async function validateMobileLegendsGopay(userId, zoneId) {
  const url = 'https://gopay.co.id/games/v1/order/user-account';
  const payload = {
    code: 'MOBILE_LEGENDS',
    data: { userId, zoneId }
  };

  try {
    const response = await fetch(url, {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify(payload)
    });

    const result = await response.json();

    if (result?.data?.countryCode) {
      result.data.country = mooCountry(result.data.countryCode);
    }

    return result;
  } catch (error) {
    return {
      status: false,
      message: 'Terjadi kesalahan saat validasi.',
      error: error.message
    };
  }
}

module.exports = function(app) {
  app.get('/stalk/mlbb', async (req, res) => {
    const { userId, zoneId } = req.query;

    if (!userId || !zoneId) {
      return res.status(400).json({
        status: false,
        message: 'Parameter userId dan zoneId harus diisi.'
      });
    }

    try {
      const result = await validateMobileLegendsGopay(userId, zoneId);
      res.status(200).json({ status: true, result });
    } catch (error) {
      res.status(500).json({
        status: false,
        message: 'Internal server error',
        error: error.message
      });
    }
  });
};
